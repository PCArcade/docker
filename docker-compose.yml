version: "2.3" 

# networks - needed so that heimdall and pi-hole can coexist on the same network the virtual lan is only used for pi-hole currently

networks:
  vlan:
    name: vlan
    driver: macvlan
    driver_opts:
      parent: enp5s0 #replace with your ethernet interface
    enable_ipv6: false
    ipam:
      config:
        - subnet: 192.168.4.0/22 #if your subnet is different, change the values here

services:
  ddclient:
    image: lscr.io/linuxserver/ddclient:latest
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - $CONF/ddclient:/config
    restart: unless-stopped

  asf:
    image: ghcr.io/justarchinet/archisteamfarm
    container_name: asf
    ports:
      - 1242:1242
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - ${CONF}/asf:/app/config
    restart: unless-stopped

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: 192.168.4.5
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      - DOCKER_HOST=http://localhost:2375
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - ${CONF}/heimdall:/config
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - ${CONF}/sonarr:/config
      - /mnt/merged/media:/media
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - ${CONF}/radarr:/config
      - /mnt/merged/media:/media
    ports:
      - 7878:7878
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ${CONF}/bazarr:/config
      - /mnt/merged/media:/media
    ports:
      - 6767:6767
    restart: unless-stopped

  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - URL=${URL}
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=${DNS}
      - MAXMINDDB_LICENSE_KEY=${MAXMIND}
      - DOCKER_MODS=linuxserver/mods:swag-auto-reload
    volumes:
      - ${CONF}/swag:/config
    ports:
      - 443:443
      - 80:80 #optional
      - 81:81
    restart: unless-stopped

  ddclient:
    image: ghcr.io/linuxserver/ddclient
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - ${CONF}/ddclient:/config
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
    ports:
      - 8191:8191
    restart: unless-stopped 

  plex:
    runtime: nvidia
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
      - NVIDIA_VISIBLE_DEVICES=all #{$GPU}
    volumes:
      - ${CONF}/plex:/config
      - /mnt/merged/media:/media
      - /mnt/ssd001/temp-transcode:/transcode
    restart: unless-stopped

  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - BASE_URL=/ombi #optional
    volumes:
      - ${CONF}/ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped  

  jellyfin:
    runtime: nvidia
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - JELLYFIN_PublishedServerUrl=192.168.4.5 #optional
      - NVIDIA_VISIBLE_DEVICES=all #{$GPU}
    volumes:
      - ${CONF}/jellyfin:/config
      - /mnt/merged/Storage/:/data/movies
#      - /mnt/merged/media:/media
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
#      - 1900:1900/udp #optional
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
#      - "67:67/udp" #disabled to allow unbound to do dns lookups
      - 80:80/tcp
    environment:
      TZ: $TZ
      WEBPASSWORD: ${PIPASS}
    shm_size: 8gb
    volumes:
      - ${CONF}/pihole/etc-pihole:/etc/pihole
      - ${CONF}/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    networks:
      vlan:
        ipv4_address: 192.168.4.2
    cap_add:
      - NET_ADMIN # needed for DHCP 
    restart: unless-stopped

  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    hostname: syn-unbound
    ports:
      - 53/tcp
      - 53/udp
    networks:
      vlan:
        ipv4_address: 192.168.4.6
    restart: unless-stopped

  nzbget:
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - ${CONF}/nzbget:/config
      - /mnt/merged/media/usenet:/media/usenet
      - /mnt/ssd001/p2p:/mnt/ssd001/p2p
      - /mnt/merged/media/usenet/.watch:/watched
      - /mnt/merged/Storage:/Storage
    ports:
      - 6789:6789
      - 6791:6791
    restart: unless-stopped

  wireguard:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - SERVERURL=vpn.pcarcade.co.uk #optional
      - SERVERPORT=51820 #optional
      - PEERS=1 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    volumes:
      - ${CONF}/wireguard:/config
      - /lib/modules:/lib/modules
#    ports:
#      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    network_mode: "service:gluetun"
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
#      - 8888:8888/tcp # HTTP proxy
#      - 8388:8388/tcp # Shadowsocks
#      - 8388:8388/udp # Shadowsocks
#      - 9117:9117 #jackett
#      - 8112:8112 # deluge
#      - 6881:6881 # deluge
#      - 6881:6881/udp #deluge
      - 51820:51820/udp #wireguard
    volumes:
      - ${CONF}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPNPROVIDER}
      - OPENVPN_USER=${VPNUSER}
      - OPENVPN_PASSWORD=${VPNPASS}
      - SERVER_COUNTRIES=${VPNAREA}
#      - SHADOWSOCKS=on
#      - FIREWALL_OUTBOUND_SUBNETS=192.168.0.0/24

#services below connect via gluetun vpn

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - ${CONF}/jackett:/config
    ports:
      - 9117:9117
#    network_mode: "service:gluetun"
    restart: unless-stopped

  deluge:
    image: ghcr.io/linuxserver/deluge:latest
    container_name: deluge
#    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${CONF}/deluge:/config
      - /mnt/merged/media/torrents:/media/torrents
      - /mnt/merged/Storage:/Storage
      - /mnt/ssd001/p2p:/mnt/ssd001/p2p
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

# testing area

  tautulli:
    image: ghcr.io/tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    volumes:
      - ${CONF}/tautulli:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    ports:
      - 8181:8181

# Deprecated / unused services
#
#  davos:
#    image: lscr.io/linuxserver/davos
#    container_name: davos
#    environment:
#      - PUID=1000
#      - PGID=1000
#    volumes:
#      - ${CONF}/davos:/config
#      - /mnt/merged/Storage/Downloads:/download
#    ports:
#      - 8080:8080
#    restart: unless-stopped
#
#  wetty:
#    image: wettyoss/wetty
#    container_name: wetty
#    working_dir: /usr/src/app
#    ports:
#      - '3000:3000'
#    environment:
#      SSHHOST: '192.168.4.5'
#      SSHPORT: 22
#      NODE_ENV: 'development'
#      BASE: '/'
#      SSLKEY: /config/key.pem  
#      SSLCERT: /config/cert.pem
#    volumes:
#      - ${CONF}/wetty:/config
#    restart: unless-stopped

