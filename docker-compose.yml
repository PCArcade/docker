version: "2.3" 

#networks - needed so that heimdall and pi-hole can coexist on the same network the virtual lan is only used for pi-hole currently

networks:
  vlan:
    name: vlan
    driver: macvlan
    driver_opts:
      parent: enp5s0 #replace with your ethernet interface
    enable_ipv6: false
    ipam:
      config:
        - subnet: 192.168.0.0/24 #if your subnet is different, change the values here

services:
  asf:
    image: ghcr.io/justarchinet/archisteamfarm
    container_name: asf
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - ${CONF}/asf:/app/config
    restart: unless-stopped

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: 192.168.0.5
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      - DOCKER_HOST=http://localhost:2375
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped

  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - ${CONF}/heimdall:/config
    restart: unless-stopped

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - ${CONF}/sonarr:/config
      - /mnt/merged/media:/media
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022 #optional
    volumes:
      - ${CONF}/radarr:/config
      - /mnt/merged/media:/media
    ports:
      - 7878:7878
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ${CONF}/bazarr:/config
      - /mnt/merged/media/library/Movies:/movies #optional
      - /mnt/merged/media/library/TV:/tv #optional
    ports:
      - 6767:6767
    restart: unless-stopped

  swag:
    image: ghcr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - URL=${URL}
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=${DNS}
      - MAXMINDDB_LICENSE_KEY=${MAXMIND}
      - DOCKER_MODS=linuxserver/mods:swag-dashboard|linuxserver/mods:swag-mod2
    volumes:
      - ${CONF}/swag:/config
    ports:
      - 443:443
      - 80:80 #optional
  #    - 81:81
    restart: unless-stopped

  deemix:
    image: registry.gitlab.com/bockiii/deemix-docker
    container_name: deemix
    volumes:
      - /mnt/merged/media/library:/downloads
      - ${CONF}/deemix:/config
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022
      - ARL=${ARL}
      - DEEZUI=false
      - REVERSEPROXY=true
    ports:
      - 6595:6595
    restart: unless-stopped

  ddclient:
    image: ghcr.io/linuxserver/ddclient
    container_name: ddclient
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      - ${CONF}/ddclient:/config
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
    ports:
      - 8191:8191
    restart: unless-stopped 

  plex:
    runtime: nvidia
    image: ghcr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
      - NVIDIA_VISIBLE_DEVICES=all #{$GPU}
    volumes:
      - ${CONF}/plex:/config
      - /mnt/merged/media:/media
    restart: unless-stopped

  ombi:
    image: lscr.io/linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - BASE_URL=/ombi #optional
    volumes:
      - ${CONF}/ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped

  jellyfin:
    runtime: nvidia
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
      - NVIDIA_VISIBLE_DEVICES=all #{$GPU}
    volumes:
      - ${CONF}/jellyfin:/config
      - /mnt/merged/Storage/.temp:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
#      - 1900:1900/udp #optional
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - 53:53/tcp
      - 53:53/udp
      - "67:67/udp" #disabled to allow unbound to do dns lookups
      - 80:80/tcp
    environment:
      TZ: $TZ
      WEBPASSWORD: ${PIPASS}
    shm_size: 8gb
    volumes:
      - ${CONF}/pihole/etc-pihole:/etc/pihole
      - ${CONF}/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    networks:
      vlan:
        ipv4_address: 192.168.0.2
    cap_add:
      - NET_ADMIN # needed for DHCP 
    restart: unless-stopped

  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    hostname: syn-unbound
    ports:
      - 53/tcp
      - 53/udp
    networks:
      vlan:
        ipv4_address: 192.168.0.6
    restart: unless-stopped

  davos:
    image: lscr.io/linuxserver/davos
    container_name: davos
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${CONF}/davos:/config
      - /mnt/merged/Storage/Downloads:/download
    ports:
      - 8080:8080
    restart: unless-stopped

  stash:
    image: stashapp/stash:latest
    container_name: stash
    ## the container's port must be the same with the STASH_PORT in the environment section
    ports:
      - "9999:9999"
    ## If you intend to use stash's DLNA functionality uncomment the below network mode and comment out the above ports section
    # network_mode: host
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "2m"
    environment:
      - STASH_STASH=/data/
      - STASH_GENERATED=/generated/
      - STASH_METADATA=/metadata/
      - STASH_CACHE=/cache/
      ## Adjust below to change default port (9999)
      - STASH_PORT=9999
    volumes:
      - /etc/localtime:/etc/localtime:ro
      ## Adjust below paths (the left part) to your liking.
      ## E.g. you can change ./config:/root/.stash to ./stash:/root/.stash
      
      ## Keep configs, scrapers, and plugins here.
      - ${CONF}/stash:/root/.stash
      ## Point this at your collection.
      - /mnt:/data
      ## This is where your stash's metadata lives
      - ${CONF}/stash/metadata:/metadata
      ## Any other cache content.
      - ${CONF}/stash/cache:/cache
      ## Where to store generated content (screenshots,previews,transcodes,sprites)
      - ${CONF}/stash/generated:/generated
    restart: unless-stopped

  nzbget:
    image: ghcr.io/linuxserver/nzbget
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - ${CONF}/nzbget:/config
      - /mnt/merged/media/usenet:/media/usenet
      - /mnt/ssd001/p2p:/mnt/ssd001/p2p
      - /mnt/merged/Downloads:/watched
    ports:
      - 6789:6789
      - 6791:6791
    restart: unless-stopped

  wireguard:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - SERVERURL=vpn.pcarcade.co.uk #optional
      - SERVERPORT=51820 #optional
      - PEERS=1 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    volumes:
      - ${CONF}/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
#    network_mode: "service:gluetun"
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 9117:9117 #jackett
      - 8112:8112 #deluge
      - 6881:6881 #deluge
      - 6881:6881/udp #deluge
    volumes:
      - ${CONF}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPNPROVIDER}
      - OPENVPN_USER=${VPNUSER}
      - OPENVPN_PASSWORD=${VPNPASS}
      - SERVER_COUNTRIES=${VPNAREA}

#servfices below connect via gluetun vpn

  jackett:
    image: ghcr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - ${CONF}/jackett:/config
#    ports:
#      - 9117:9117
    network_mode: "service:gluetun"
    restart: unless-stopped

  deluge:
    image: ghcr.io/linuxserver/deluge:latest
#    image: ghcr.io/linuxserver/deluge:2.0.3-2201906121747ubuntu18.04.1-ls128
    container_name: deluge
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${CONF}/deluge:/config
      - /mnt/merged/media/torrents:/media/torrents
      - /mnt/merged/Storage/Games/Switch/library:/Switch
      - /mnt/ssd001/p2p:/mnt/ssd001/p2p
#    ports:
#      - 8112:8112
#      - 6881:6881
#      - 6881:6881/udp
    network_mode: "service:gluetun"
    restart: unless-stopped
